# Liste of Manifests
# - Secret
# - ConfigMap
# - Deployment
# - PersistentVolumeClaim
apiVersion: v1
kind: Secret
stringData:
    MSSQL_SA_PASSWORD: 111111
metadata:
    name: mssql-secret
type: Opaque
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mssql-config
data:
  MSSQL_PID: "Developer"
  ACCEPT_EULA: "Y"  
---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: mssql
spec:
    replicas: 1
    selector:
        matchLabels:
            app: mssql
    strategy:
        type: Recreate
    template:
        metadata:
            labels:
                app: mssql
        spec:
            terminationGracePeriodSeconds: 10
            securityContext:
                fsGroup: 1000
            containers:
            - name: mssql
              image: mcr.microsoft.com/mssql/rhel/server:2019-latest
              envFrom:
              - configMapRef:
                    name: mssql-config
              - secretRef:
                    name: mssql-secret
              volumeMounts:
              - name: mssqldb
                mountPath: /var/opt/mssql
            volumes:
            - name: mssqldb
              persistentVolumeClaim:
                claimName: mssql-data
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-WaitForFirstConsumer
provisioner: kubernetes.io/gce-pd
parameters:
  type: pd-standard
volumeBindingMode: WaitForFirstConsumer
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
    name: mssql-data
spec:
    accessModes:
    - ReadWriteOnce
    resources:
        requests:
            storage: 8Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mssql-data-pv
spec:
  capacity:
    storage: 8Gi
  volumeMode: Filesystem
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  #storageClassName: local-storage
  local:
    path: /mnt/disks/ssd1
---
# Create the load balancing service
apiVersion: v1
kind: Service
metadata:
    name: mssql-service
spec:
    selector:
        app: mssql
    ports:
        - protocol: TCP
            port: 1433
            targetPort: 1433
            nodePort: 32000
    type: NodePort
